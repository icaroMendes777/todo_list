[{"/home/icaro/projects/react/todo-react/todo_list/src/index.js":"1","/home/icaro/projects/react/todo-react/todo_list/src/App.js":"2","/home/icaro/projects/react/todo-react/todo_list/src/reportWebVitals.js":"3"},{"size":535,"mtime":1671445510862,"results":"4","hashOfConfig":"5"},{"size":3210,"mtime":1676814074946,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1671445510878,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"131xp81",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/icaro/projects/react/todo-react/todo_list/src/index.js",[],[],"/home/icaro/projects/react/todo-react/todo_list/src/App.js",["18","19","20","21","22"],[],"import logo from './logo.svg';\nimport {useState, useRef} from 'react';\nimport './App.css';\n\nimport Pencils from './pencils.png';\n\nconst initialTodo = [\n  'Insira suas tarefas aqui',\n  'Comece apagando essas tarefas'\n]\n\n\n\n/*\n==========================================\nMAIN\n==========================================\n*/\nfunction App() {\n\n\n  const mystyle = {\n    left:'0px',\n   }; \n\n   const mystyleMove = {\n    left:'3px',\n   }; \n\n\n  const [newTask,setNewTask] = useState('');\n  const [todo,setTodo] = useState(initialTodo);\n  const todoList = useRef(initialTodo);\n\n  const [pLapis, setPlapis] = useState(mystyle);\n\n\n\n  const inputRef = useRef(null);\n\n  //esse state é usado somente para forçar um re-render\n  const [render, setRender] = useState(false);\n\n\n\n  const [classUp, setClasslUp] = useState('upside_up');\n \n\n\n  //--------------------------------------------+++++++++++++++++++++++\n  \n\n\n  const movePencil = ()=>{\n\n\n    if (pLapis.left == '0px') \n      setPlapis(mystyleMove);\n    else setPlapis(mystyle);\n      \n  }\n\n  const addTask = ()=>{\n   \n    if (!newTask) return;   \n    todoList.current.push(newTask);\n    setNewTask('');\n\n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  }\n\n\n  const deleteTodo = (index)=>{\n\n    todoList.current.splice(index,1);\n  \n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  }\n \n  //--------------------------------------------+++++++++++++++++++++++\n  \n\n  return (\n    <>\n\n    {/*\n\n    Formulário  - Nova Tarefa\n    ============================*/}\n  <div className=\"todo_container\">\n    <h1>Lembrar de fazer</h1>\n\n\n    <div className='input_box'>\n        <div className='wrap_input'>\n          \n        <label>\n        Nova tarefa:\n          <input type=\"text\"\n          size='35'\n          className='input'\n          value={newTask}\n          onChange={(e) => {\n            if(e.target.value.length < 35){\n              setNewTask(e.target.value);\n              movePencil(); \n            }\n            \n          }}\n          ></input>\n        </label>\n\n          <div className='wrap_div_btn'>\n            <div className=\"div_btn add_btn no_select\" onClick={addTask}> +</div>\n          </div>\n        </div>\n\n        <div className='wrap_logo'> \n          <img src={Pencils} alt=\"lapis\"  ref={inputRef} className={classUp} style={pLapis}/>\n        </div>\n      </div>\n      {/**\n      <div className='wrap_div_btn'>\n        <div className=\"div_btn\"> +</div>\n      </div>\n       */}\n      \n    <hr/>\n\n{/*\n\nLista - toDos\n============================*/}\n    <div className=\"tarefas_wrap light_shadow\">\n      <div className='wrap_list'>\n          {(!todo.length) && <h2>Sem tarefas Hoje</h2>}\n        { todo.map((el,index)=>{\n\n          return (\n          <div className=\"item_tarefa light_shadow\" key={index}>\n            <div>{index+1} - {el}</div>\n            <div className=\"delete_btn no_select\" onClick={ ()=>{deleteTodo(index)} }>X</div>\n\n            </div>\n          );\n        })}\n\n    </div>\n    { \n    ///feature to be implemented in the future\n    //todo.length && <div className='delete_list'>Apagar<br/>Lista</div>\n    \n    }\n    \n    </div> \n\n    </div>\n    </>\n  );\n}\n\n\nexport default App;\n","/home/icaro/projects/react/todo-react/todo_list/src/reportWebVitals.js",[],[],{"ruleId":"23","severity":1,"message":"24","line":1,"column":8,"nodeType":"25","messageId":"26","endLine":1,"endColumn":12},{"ruleId":"23","severity":1,"message":"27","line":32,"column":15,"nodeType":"25","messageId":"26","endLine":32,"endColumn":22},{"ruleId":"23","severity":1,"message":"28","line":42,"column":10,"nodeType":"25","messageId":"26","endLine":42,"endColumn":16},{"ruleId":"23","severity":1,"message":"29","line":46,"column":19,"nodeType":"25","messageId":"26","endLine":46,"endColumn":30},{"ruleId":"30","severity":1,"message":"31","line":57,"column":21,"nodeType":"32","messageId":"33","endLine":57,"endColumn":23},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'setTodo' is assigned a value but never used.","'render' is assigned a value but never used.","'setClasslUp' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]