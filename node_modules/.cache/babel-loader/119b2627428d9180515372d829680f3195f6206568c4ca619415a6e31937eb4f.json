{"ast":null,"code":"var _jsxFileName = \"/home/icaro/projects/React/todo-react/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport { useState, useRef } from 'react';\nimport './App.css';\nimport Pencils from './pencils.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialTodo = ['Insira suas tarefas aqui', 'Comece apagando essas tarefas'];\n\n//---console.log simplificado----\nfunction log() {\n  let arg1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '---';\n  let arg2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  console.log(arg1, arg2);\n}\n\n/*\n==========================================\nMAIN\n==========================================\n*/\nfunction App() {\n  _s();\n  const mystyle = {\n    left: '0px'\n  };\n  const mystyleMove = {\n    left: '3px'\n  };\n  const [newTask, setNewTask] = useState('');\n  const [todo, setTodo] = useState(initialTodo);\n  const todoList = useRef(initialTodo);\n  const [pLapis, setPlapis] = useState(mystyle);\n  const inputRef = useRef(null);\n\n  //esse state é usado somente para forçar um re-render\n  const [render, setRender] = useState(false);\n\n  /*\n    const [classUp, setClasslUp] = useState('upside_up');\n   const [delay, setDelay] = useState(false);\n   const [renewDelay, setrenewDelay] = useState(false);\n    window.addEventListener('keydown', (event) => {\n     if(event.key == \"Backspace\"){\n       upDownPencil();\n     }\n   });\n    window.addEventListener('keyup', (event) => {\n     if(event.key == \"Backspace\"){\n       upUpPencil();\n     }\n   });\n    const upDownPencil = ()=>{\n     if(classUp == 'upside_down') return;\n     else setClasslUp('upside_down');\n   }\n    const upUpPencil = ()=>{\n     delayIt(function() {\n      // if(setDelay) return; ///--------\n       setClasslUp('upside_up');\n     });\n   }\n    const delayIt = (func)=>\n   {\n     setTimeout(function() {\n       func();\n     }, 2000);\n   }\n  */\n  const movePencil = () => {\n    log('move', pLapis.left);\n    log('stl', mystyle);\n    if (pLapis.left == '0px') setPlapis(mystyleMove);else setPlapis(mystyle);\n  };\n  const addTask = () => {\n    if (!newTask) return;\n    todoList.current.push(newTask);\n    setNewTask('');\n\n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  };\n  const deleteTodo = index => {\n    //log('index',index);\n\n    todoList.current.splice(index, 1);\n    log('todo', todoList.current);\n\n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  };\n\n  //--------------------------------------------+++++++++++++++++++++++\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo_container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Lembrar de fazer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input_box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap_input\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Nova tarefa:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              size: \"35\",\n              value: newTask,\n              onChange: e => {\n                if (e.target.value.length < 35) {\n                  setNewTask(e.target.value);\n                  movePencil();\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"wrap_div_btn\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"div_btn add_btn no_select\",\n              onClick: addTask,\n              children: \" +\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap_logo\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: Pencils,\n            alt: \"lapis\",\n            ref: inputRef,\n            className: classUp,\n            style: pLapis\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tarefas_wrap light_shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrap_list\",\n          children: [!todo.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Sem tarefas Hoje\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 30\n          }, this), todo.map((el, index) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item_tarefa light_shadow\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [index + 1, \" - \", el]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"delete_btn no_select\",\n                onClick: () => {\n                  deleteTodo(index);\n                },\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 13\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 11\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n_s(App, \"Nfj6Az7kAGs77zUWfwUwaB+aU5k=\");\n_c = App;\n{/*===========================*/}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useRef","Pencils","initialTodo","log","arg1","arg2","console","App","mystyle","left","mystyleMove","newTask","setNewTask","todo","setTodo","todoList","pLapis","setPlapis","inputRef","render","setRender","movePencil","addTask","current","push","Math","random","deleteTodo","index","splice","e","target","value","length","classUp","map","el"],"sources":["/home/icaro/projects/React/todo-react/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport {useState, useRef} from 'react';\nimport './App.css';\n\nimport Pencils from './pencils.png';\n\nconst initialTodo = [\n  'Insira suas tarefas aqui',\n  'Comece apagando essas tarefas'\n]\n\n\n//---console.log simplificado----\nfunction log(arg1='---', arg2='')\n{\n  console.log(arg1,arg2);\n}\n\n\n\n/*\n==========================================\nMAIN\n==========================================\n*/\nfunction App() {\n\n\n  const mystyle = {\n    left:'0px',\n   }; \n\n   const mystyleMove = {\n    left:'3px',\n   }; \n\n\n  const [newTask,setNewTask] = useState('');\n  const [todo,setTodo] = useState(initialTodo);\n  const todoList = useRef(initialTodo);\n\n  const [pLapis, setPlapis] = useState(mystyle);\n\n\n\n  const inputRef = useRef(null);\n\n  //esse state é usado somente para forçar um re-render\n  const [render, setRender] = useState(false);\n \n /*\n\n  const [classUp, setClasslUp] = useState('upside_up');\n  const [delay, setDelay] = useState(false);\n  const [renewDelay, setrenewDelay] = useState(false);\n\n  window.addEventListener('keydown', (event) => {\n    if(event.key == \"Backspace\"){\n      upDownPencil();\n    }\n  });\n\n  window.addEventListener('keyup', (event) => {\n    if(event.key == \"Backspace\"){\n      upUpPencil();\n    }\n  });\n\n  const upDownPencil = ()=>{\n    if(classUp == 'upside_down') return;\n    else setClasslUp('upside_down');\n  }\n\n  const upUpPencil = ()=>{\n    delayIt(function() {\n     // if(setDelay) return; ///--------\n      setClasslUp('upside_up');\n    });\n  }\n\n  const delayIt = (func)=>\n  {\n    setTimeout(function() {\n      func();\n    }, 2000);\n  }\n\n*/\n  const movePencil = ()=>{\n\n    log('move', pLapis.left);\n    log('stl',mystyle);\n    if (pLapis.left == '0px') \n      setPlapis(mystyleMove);\n    else setPlapis(mystyle);\n      \n  }\n\n  const addTask = ()=>{\n   \n    if (!newTask) return;   \n    todoList.current.push(newTask);\n    setNewTask('');\n\n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  }\n\n\n  const deleteTodo = (index)=>{\n    //log('index',index);\n\n    todoList.current.splice(index,1);\n    log('todo',todoList.current);\n  \n    //abaixo: somente para causar um re-render\n    setRender(Math.random());\n  }\n \n  //--------------------------------------------+++++++++++++++++++++++\n  \n\n  return (\n    <>\n\n    {/*\n\n    Formulário  - Nova Tarefa\n    ============================*/}\n  <div className=\"todo_container\">\n    <h1>Lembrar de fazer</h1>\n\n\n    <div className='input_box'>\n        <div className='wrap_input'>\n          \n        <label>\n        Nova tarefa:\n          <input type=\"text\"\n          size='35'\n          value={newTask}\n          onChange={(e) => {\n            if(e.target.value.length < 35){\n              setNewTask(e.target.value);\n              movePencil(); \n            }\n            \n          }}\n          ></input>\n        </label>\n\n          <div className='wrap_div_btn'>\n            <div className=\"div_btn add_btn no_select\" onClick={addTask}> +</div>\n          </div>\n        </div>\n\n        <div className='wrap_logo'> \n          <img src={Pencils} alt=\"lapis\"  ref={inputRef} className={classUp} style={pLapis}/>\n        </div>\n      </div>\n      {/**\n      <div className='wrap_div_btn'>\n        <div className=\"div_btn\"> +</div>\n      </div>\n       */}\n      \n    <hr/>\n\n{/*\n\nLista - toDos\n============================*/}\n    <div className=\"tarefas_wrap light_shadow\">\n      <div className='wrap_list'>\n          {(!todo.length) && <h2>Sem tarefas Hoje</h2>}\n        { todo.map((el,index)=>{\n\n          return (\n          <div className=\"item_tarefa light_shadow\" key={index}>\n            <div>{index+1} - {el}</div>\n            <div className=\"delete_btn no_select\" onClick={ ()=>{deleteTodo(index)} }>X</div>\n\n            </div>\n          );\n        })}\n\n    </div>\n    { \n    ///feature to be implemented in the future\n    //todo.length && <div className='delete_list'>Apagar<br/>Lista</div>\n    \n    }\n    \n    </div> \n\n    </div>\n    </>\n  );\n}\n\n\n{/*===========================*/}\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}